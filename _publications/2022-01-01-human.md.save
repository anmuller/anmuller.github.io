---
title: "On-line feasible wrench polytope evaluation based on human musculoskeletal models: an iterative convex hull method"
collection: publications
permalink: /publication_human_force
excerpt: 'On-line feasible wrench polytope evaluation based on human musculoskeletal models: an iterative convex hull method.'
date: 2022-01-01
venue: 'IEEE ICRA2022 & IEEE RA-L'
paperurl: 'https://ieeexplore.ieee.org/abstract/document/9562050'
citation: ''
authors: '<b>Antun Skuric</b>, Vincent Padois, Nasser Rezzoug, David Daney'
teaser: "human_poly.gif"
---

<div style="display:inline-flex;width:100%;justify-content:space-evenly">
<a href="https://gitlab.inria.fr/askuric/human_wrench_capacity"> <i class="fab fa-github"></i> Github</a> 
<a href="https://arxiv.org/pdf/2110.06790.pdf"><i class="fa fa-file-pdf"></i> PDF</a>
<a href="https://hal.inria.fr/hal-03408560/document"><i class="fa fa-file-powerpoint"></i> Slides</a>  <a href="https://hal.inria.fr/hal-03369576"><img src="https://img.shields.io/badge/hal-03369576-blue"></a>
</div>



<img src="images/bimanual1.png">

<img style="float:right;max-width:300px" src="images/ichm1s.gif" >
<i>Iterative convex hull</i> is a polytope evaluation algorithm developed for the generic class of the linear algebra problems:

$$ A\boldsymbol{x} = B\boldsymbol{y},\qquad \boldsymbol{y} \in [\boldsymbol{y} _{min}, \boldsymbol{y} _{max}] $$

This type of problems can be found in many different domains, one of them being the wrench capacity analysis of the human musculoskeletal models. In this paper the method overview is given as well as the verified on the assistive robotics scenario.



## Paper Abstract

Many recent human-robot collaboration strategies, such as Assist-As-Needed (AAN), are promoting humancentered robot control, where the robot continuously adapts its assistance level based on the real-time need of its human counterpart. One of the fundamental assumptions of these approaches is the ability to measure or estimate the physical capacity of humans in real-time.In this work, we propose an algorithm for the feasibility set analysis of a generic class of linear algebra problems. This novel iterative convex-hull method is applied to the determination of the feasible Cartesian wrench polytope associated to a musculoskeletal model of the human upper limb.  
<img style="float:left;max-width:100%;max-height:300px" src="images/human_poly.gif">The method is capable of running in real-time and allows the user to define the desired estimation accuracy. The algorithm performance analysis shows that the execution time has 
near-linear relationship to the considered number of muscles, as opposed to the exponential relationship of the conventional methods. Finally, real-time robot control application of the algorithm is demonstrated in a Collaborative carrying experiment, where a human operator and a Franka Emika Panda robot jointly carry a 7kg object. The robot is controlled in accordance to the AAN paradigm maintaining the load carried by the human operator at 30% of its carrying capacity.

The full version of the paper is open access and can be found in HAL database: [<i class="fa fa-file"></i> manuscript](https://hal.inria.fr/hal-03369576) 


## Video presentation

<iframe width="560" height="315" src="https://www.youtube.com/embed/kss0-aompbs" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

## Getting started

Matlab and python code and more documentation about practical implementation of this method can be found on our [gitlab](https://gitlab.inria.fr/auctus-team/people/antunskuric/human_wrench_capacity).

Additionally the full algorithm has been implemented in the python pip package [pycapacity](https://auctus-team.github.io/ask-space capacity metrics for robots and human manipulators in real-time.

```shell 
pip install pycapacity
```

## Example code 
Example code for randomised 20 muscle human musculoskeltal model using the pycapacity package

```python
"""
A simple example program for 3d force polytope 
evaluation of a randomised 20 muscle 6dof 
human musculoskeletal model 
"""
import pycapacity.human as capacity # robot capacity module
import numpy as np

L = 20 # number of muscles
m = 3 # 3d forces
n = 6 # number of joints - dof

# this seed is used to generate the same image 
# as in the examples in the docs 
np.random.seed(123456)

J = np.array(np.random.rand(m,n))*2-1 # random jacobian matrix
N = np.array(np.random.rand(n,L))*2-1 # random moment arm matrix

F_max = 100*np.ones(L)  # muscle forces limits max and min
F_min = np.zeros(L)

f_poly = capacity.force_polytope(J,N, F_min, F_max, 0.1) # calculate the polytope 


# plotting the polytope
import matplotlib.pyplot as plt
from pycapacity.visual import * # pycapacity visualisation tools
fig = plt.figure(4)

# draw faces and vertices
plot_polytope(plot=plt, 
              polytope=f_poly, 
              label='force', 
              edge_color='black', 
              alpha = 0.4)

plt.legend()
plt.show()

```
When executed you'll be able to see the 3D plot of the polytope

<img src="https://auctus-team.github.io/pycapacity/_images/rand_human.png">